{"ast":null,"code":"var _jsxFileName = \"/home/wannabe/Desktop/Node/mernstack/test/src/components/create.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  const [form, setForm] = useState({\n    name: \"\",\n    age: \"\",\n    email: \"\",\n    ID: \"\",\n    role: \"\"\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = {\n      ...form\n    };\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      age: \"\",\n      email: \"\",\n      ID: \"\",\n      role: \"\"\n    });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"age\",\n          value: form.age,\n          onChange: e => updateForm({\n            age: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          id: \"email\",\n          value: form.email,\n          onChange: e => updateForm({\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ID\",\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"ID\",\n          value: form.ID,\n          onChange: e => updateForm({\n            ID: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"roleOptions\",\n            id: \"roleTeacher\",\n            value: \"Teacher\",\n            checked: form.level === \"Teacher\",\n            onChange: e => updateForm({\n              role: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"roleTeacher\",\n            className: \"form-check-label\",\n            children: \"Teacher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"roleOptions\",\n            id: \"roleStudent\",\n            value: \"Student\",\n            checked: form.level === \"Student\",\n            onChange: e => updateForm({\n              role: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"roleStudent\",\n            className: \"form-check-label\",\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create person\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 4\n  }, this);\n}\n_s(Create, \"BqvTKwW9I5Ui8ydFIeg6LADpCqs=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useNavigate","Create","form","setForm","name","age","email","ID","role","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","target","level"],"sources":["/home/wannabe/Desktop/Node/mernstack/test/src/components/create.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n \nexport default function Create() {\n const [form, setForm] = useState({\n   name: \"\",\n   age: \"\",\n   email: \"\",\n   ID: \"\",\n   role: \"\",\n });\n const navigate = useNavigate();\n \n // These methods will update the state properties.\n function updateForm(value) {\n   return setForm((prev) => {\n     return { ...prev, ...value };\n   });\n }\n \n // This function will handle the submission.\n async function onSubmit(e) {\n   e.preventDefault();\n \n   // When a post request is sent to the create url, we'll add a new record to the database.\n   const newPerson = { ...form };\n \n   await fetch(\"http://localhost:5000/record/add\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify(newPerson),\n   })\n   .catch(error => {\n     window.alert(error);\n     return;\n   });\n \n   setForm({ name: \"\", age: \"\", email: \"\", ID: \"\", role: \"\" });\n   navigate(\"/\");\n }\n \n // This following section will display the form that takes the input from the user.\n return (\n   <div>\n     <h3>Create New Record</h3>\n     <form onSubmit={onSubmit}>\n       <div className=\"form-group\">\n         <label htmlFor=\"name\">Name</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"name\"\n           value={form.name}\n           onChange={(e) => updateForm({ name: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"age\">Age</label>\n         <input\n           type=\"number\"\n           className=\"form-control\"\n           id=\"age\"\n           value={form.age}\n           onChange={(e) => updateForm({ age: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"email\">Email</label>\n         <input\n           type=\"email\"\n           className=\"form-control\"\n           id=\"email\"\n           value={form.email}\n           onChange={(e) => updateForm({ email: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"ID\">ID</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"ID\"\n           value={form.ID}\n           onChange={(e) => updateForm({ ID: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <div className=\"form-check form-check-inline\">\n           <input\n             className=\"form-check-input\"\n             type=\"radio\"\n             name=\"roleOptions\"\n             id=\"roleTeacher\"\n             value=\"Teacher\"\n             checked={form.level === \"Teacher\"}\n             onChange={(e) => updateForm({ role: e.target.value })}\n           />\n           <label htmlFor=\"roleTeacher\" className=\"form-check-label\">Teacher</label>\n         </div>\n         <div className=\"form-check form-check-inline\">\n           <input\n             className=\"form-check-input\"\n             type=\"radio\"\n             name=\"roleOptions\"\n             id=\"roleStudent\"\n             value=\"Student\"\n             checked={form.level === \"Student\"}\n             onChange={(e) => updateForm({ role: e.target.value })}\n           />\n           <label htmlFor=\"roleStudent\" className=\"form-check-label\">Student</label>\n         </div>\n       </div>\n       <div className=\"form-group\">\n         <input\n           type=\"submit\"\n           value=\"Create person\"\n           className=\"btn btn-primary\"\n         />\n       </div>\n     </form>\n   </div>\n );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}